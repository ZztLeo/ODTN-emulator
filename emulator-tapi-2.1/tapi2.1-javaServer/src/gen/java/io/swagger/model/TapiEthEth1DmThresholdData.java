/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiEthStatisticalDmPerformanceParameters;
import javax.validation.constraints.*;

/**
 * TapiEthEth1DmThresholdData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiEthEth1DmThresholdData   {
  @JsonProperty("near-end-1-dm-cross-threshold")
  private TapiEthStatisticalDmPerformanceParameters nearEnd1DmCrossThreshold = null;

  @JsonProperty("near-end-1-dm-clear-threshold")
  private TapiEthStatisticalDmPerformanceParameters nearEnd1DmClearThreshold = null;

  public TapiEthEth1DmThresholdData nearEnd1DmCrossThreshold(TapiEthStatisticalDmPerformanceParameters nearEnd1DmCrossThreshold) {
    this.nearEnd1DmCrossThreshold = nearEnd1DmCrossThreshold;
    return this;
  }

  /**
   * This attribute contains the near end cross threshold values of the delay measurements.
   * @return nearEnd1DmCrossThreshold
   **/
  @JsonProperty("near-end-1-dm-cross-threshold")
  @ApiModelProperty(value = "This attribute contains the near end cross threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getNearEnd1DmCrossThreshold() {
    return nearEnd1DmCrossThreshold;
  }

  public void setNearEnd1DmCrossThreshold(TapiEthStatisticalDmPerformanceParameters nearEnd1DmCrossThreshold) {
    this.nearEnd1DmCrossThreshold = nearEnd1DmCrossThreshold;
  }

  public TapiEthEth1DmThresholdData nearEnd1DmClearThreshold(TapiEthStatisticalDmPerformanceParameters nearEnd1DmClearThreshold) {
    this.nearEnd1DmClearThreshold = nearEnd1DmClearThreshold;
    return this;
  }

  /**
   * This attribute contains the near end clear threshold values of the delay measurements.
   * @return nearEnd1DmClearThreshold
   **/
  @JsonProperty("near-end-1-dm-clear-threshold")
  @ApiModelProperty(value = "This attribute contains the near end clear threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getNearEnd1DmClearThreshold() {
    return nearEnd1DmClearThreshold;
  }

  public void setNearEnd1DmClearThreshold(TapiEthStatisticalDmPerformanceParameters nearEnd1DmClearThreshold) {
    this.nearEnd1DmClearThreshold = nearEnd1DmClearThreshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiEthEth1DmThresholdData tapiEthEth1DmThresholdData = (TapiEthEth1DmThresholdData) o;
    return Objects.equals(this.nearEnd1DmCrossThreshold, tapiEthEth1DmThresholdData.nearEnd1DmCrossThreshold) &&
        Objects.equals(this.nearEnd1DmClearThreshold, tapiEthEth1DmThresholdData.nearEnd1DmClearThreshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nearEnd1DmCrossThreshold, nearEnd1DmClearThreshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiEthEth1DmThresholdData {\n");
    
    sb.append("    nearEnd1DmCrossThreshold: ").append(toIndentedString(nearEnd1DmCrossThreshold)).append("\n");
    sb.append("    nearEnd1DmClearThreshold: ").append(toIndentedString(nearEnd1DmClearThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

