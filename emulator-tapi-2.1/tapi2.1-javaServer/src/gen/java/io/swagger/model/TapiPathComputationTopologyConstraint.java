/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiCommonLayerProtocolName;
import io.swagger.model.TapiPathComputationPathRef;
import io.swagger.model.TapiTopologyLinkRef;
import io.swagger.model.TapiTopologyNodeRef;
import io.swagger.model.TapiTopologyTopologyRef;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * TapiPathComputationTopologyConstraint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiPathComputationTopologyConstraint   {
  @JsonProperty("include-node")
  private List<TapiTopologyNodeRef> includeNode = null;

  @JsonProperty("exclude-link")
  private List<TapiTopologyLinkRef> excludeLink = null;

  @JsonProperty("avoid-topology")
  private List<TapiTopologyTopologyRef> avoidTopology = null;

  @JsonProperty("exclude-path")
  private List<TapiPathComputationPathRef> excludePath = null;

  @JsonProperty("include-link")
  private List<TapiTopologyLinkRef> includeLink = null;

  @JsonProperty("preferred-transport-layer")
  private List<TapiCommonLayerProtocolName> preferredTransportLayer = null;

  @JsonProperty("exclude-node")
  private List<TapiTopologyNodeRef> excludeNode = null;

  @JsonProperty("include-topology")
  private List<TapiTopologyTopologyRef> includeTopology = null;

  @JsonProperty("include-path")
  private List<TapiPathComputationPathRef> includePath = null;

  public TapiPathComputationTopologyConstraint includeNode(List<TapiTopologyNodeRef> includeNode) {
    this.includeNode = includeNode;
    return this;
  }

  public TapiPathComputationTopologyConstraint addIncludeNodeItem(TapiTopologyNodeRef includeNodeItem) {
    if (this.includeNode == null) {
      this.includeNode = new ArrayList<TapiTopologyNodeRef>();
    }
    this.includeNode.add(includeNodeItem);
    return this;
  }

  /**
   * This is a loose constraint - that is it is unordered and could be a partial list
   * @return includeNode
   **/
  @JsonProperty("include-node")
  @ApiModelProperty(value = "This is a loose constraint - that is it is unordered and could be a partial list")
  public List<TapiTopologyNodeRef> getIncludeNode() {
    return includeNode;
  }

  public void setIncludeNode(List<TapiTopologyNodeRef> includeNode) {
    this.includeNode = includeNode;
  }

  public TapiPathComputationTopologyConstraint excludeLink(List<TapiTopologyLinkRef> excludeLink) {
    this.excludeLink = excludeLink;
    return this;
  }

  public TapiPathComputationTopologyConstraint addExcludeLinkItem(TapiTopologyLinkRef excludeLinkItem) {
    if (this.excludeLink == null) {
      this.excludeLink = new ArrayList<TapiTopologyLinkRef>();
    }
    this.excludeLink.add(excludeLinkItem);
    return this;
  }

  /**
   * none
   * @return excludeLink
   **/
  @JsonProperty("exclude-link")
  @ApiModelProperty(value = "none")
  public List<TapiTopologyLinkRef> getExcludeLink() {
    return excludeLink;
  }

  public void setExcludeLink(List<TapiTopologyLinkRef> excludeLink) {
    this.excludeLink = excludeLink;
  }

  public TapiPathComputationTopologyConstraint avoidTopology(List<TapiTopologyTopologyRef> avoidTopology) {
    this.avoidTopology = avoidTopology;
    return this;
  }

  public TapiPathComputationTopologyConstraint addAvoidTopologyItem(TapiTopologyTopologyRef avoidTopologyItem) {
    if (this.avoidTopology == null) {
      this.avoidTopology = new ArrayList<TapiTopologyTopologyRef>();
    }
    this.avoidTopology.add(avoidTopologyItem);
    return this;
  }

  /**
   * none
   * @return avoidTopology
   **/
  @JsonProperty("avoid-topology")
  @ApiModelProperty(value = "none")
  public List<TapiTopologyTopologyRef> getAvoidTopology() {
    return avoidTopology;
  }

  public void setAvoidTopology(List<TapiTopologyTopologyRef> avoidTopology) {
    this.avoidTopology = avoidTopology;
  }

  public TapiPathComputationTopologyConstraint excludePath(List<TapiPathComputationPathRef> excludePath) {
    this.excludePath = excludePath;
    return this;
  }

  public TapiPathComputationTopologyConstraint addExcludePathItem(TapiPathComputationPathRef excludePathItem) {
    if (this.excludePath == null) {
      this.excludePath = new ArrayList<TapiPathComputationPathRef>();
    }
    this.excludePath.add(excludePathItem);
    return this;
  }

  /**
   * none
   * @return excludePath
   **/
  @JsonProperty("exclude-path")
  @ApiModelProperty(value = "none")
  public List<TapiPathComputationPathRef> getExcludePath() {
    return excludePath;
  }

  public void setExcludePath(List<TapiPathComputationPathRef> excludePath) {
    this.excludePath = excludePath;
  }

  public TapiPathComputationTopologyConstraint includeLink(List<TapiTopologyLinkRef> includeLink) {
    this.includeLink = includeLink;
    return this;
  }

  public TapiPathComputationTopologyConstraint addIncludeLinkItem(TapiTopologyLinkRef includeLinkItem) {
    if (this.includeLink == null) {
      this.includeLink = new ArrayList<TapiTopologyLinkRef>();
    }
    this.includeLink.add(includeLinkItem);
    return this;
  }

  /**
   * This is a loose constraint - that is it is unordered and could be a partial list 
   * @return includeLink
   **/
  @JsonProperty("include-link")
  @ApiModelProperty(value = "This is a loose constraint - that is it is unordered and could be a partial list ")
  public List<TapiTopologyLinkRef> getIncludeLink() {
    return includeLink;
  }

  public void setIncludeLink(List<TapiTopologyLinkRef> includeLink) {
    this.includeLink = includeLink;
  }

  public TapiPathComputationTopologyConstraint preferredTransportLayer(List<TapiCommonLayerProtocolName> preferredTransportLayer) {
    this.preferredTransportLayer = preferredTransportLayer;
    return this;
  }

  public TapiPathComputationTopologyConstraint addPreferredTransportLayerItem(TapiCommonLayerProtocolName preferredTransportLayerItem) {
    if (this.preferredTransportLayer == null) {
      this.preferredTransportLayer = new ArrayList<TapiCommonLayerProtocolName>();
    }
    this.preferredTransportLayer.add(preferredTransportLayerItem);
    return this;
  }

  /**
   * soft constraint requested by client to indicate the layer(s) of transport connection that it prefers to carry the service. This could be same as the service layer or one of the supported server layers
   * @return preferredTransportLayer
   **/
  @JsonProperty("preferred-transport-layer")
  @ApiModelProperty(value = "soft constraint requested by client to indicate the layer(s) of transport connection that it prefers to carry the service. This could be same as the service layer or one of the supported server layers")
  public List<TapiCommonLayerProtocolName> getPreferredTransportLayer() {
    return preferredTransportLayer;
  }

  public void setPreferredTransportLayer(List<TapiCommonLayerProtocolName> preferredTransportLayer) {
    this.preferredTransportLayer = preferredTransportLayer;
  }

  public TapiPathComputationTopologyConstraint excludeNode(List<TapiTopologyNodeRef> excludeNode) {
    this.excludeNode = excludeNode;
    return this;
  }

  public TapiPathComputationTopologyConstraint addExcludeNodeItem(TapiTopologyNodeRef excludeNodeItem) {
    if (this.excludeNode == null) {
      this.excludeNode = new ArrayList<TapiTopologyNodeRef>();
    }
    this.excludeNode.add(excludeNodeItem);
    return this;
  }

  /**
   * none
   * @return excludeNode
   **/
  @JsonProperty("exclude-node")
  @ApiModelProperty(value = "none")
  public List<TapiTopologyNodeRef> getExcludeNode() {
    return excludeNode;
  }

  public void setExcludeNode(List<TapiTopologyNodeRef> excludeNode) {
    this.excludeNode = excludeNode;
  }

  public TapiPathComputationTopologyConstraint includeTopology(List<TapiTopologyTopologyRef> includeTopology) {
    this.includeTopology = includeTopology;
    return this;
  }

  public TapiPathComputationTopologyConstraint addIncludeTopologyItem(TapiTopologyTopologyRef includeTopologyItem) {
    if (this.includeTopology == null) {
      this.includeTopology = new ArrayList<TapiTopologyTopologyRef>();
    }
    this.includeTopology.add(includeTopologyItem);
    return this;
  }

  /**
   * none
   * @return includeTopology
   **/
  @JsonProperty("include-topology")
  @ApiModelProperty(value = "none")
  public List<TapiTopologyTopologyRef> getIncludeTopology() {
    return includeTopology;
  }

  public void setIncludeTopology(List<TapiTopologyTopologyRef> includeTopology) {
    this.includeTopology = includeTopology;
  }

  public TapiPathComputationTopologyConstraint includePath(List<TapiPathComputationPathRef> includePath) {
    this.includePath = includePath;
    return this;
  }

  public TapiPathComputationTopologyConstraint addIncludePathItem(TapiPathComputationPathRef includePathItem) {
    if (this.includePath == null) {
      this.includePath = new ArrayList<TapiPathComputationPathRef>();
    }
    this.includePath.add(includePathItem);
    return this;
  }

  /**
   * none
   * @return includePath
   **/
  @JsonProperty("include-path")
  @ApiModelProperty(value = "none")
  public List<TapiPathComputationPathRef> getIncludePath() {
    return includePath;
  }

  public void setIncludePath(List<TapiPathComputationPathRef> includePath) {
    this.includePath = includePath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiPathComputationTopologyConstraint tapiPathComputationTopologyConstraint = (TapiPathComputationTopologyConstraint) o;
    return Objects.equals(this.includeNode, tapiPathComputationTopologyConstraint.includeNode) &&
        Objects.equals(this.excludeLink, tapiPathComputationTopologyConstraint.excludeLink) &&
        Objects.equals(this.avoidTopology, tapiPathComputationTopologyConstraint.avoidTopology) &&
        Objects.equals(this.excludePath, tapiPathComputationTopologyConstraint.excludePath) &&
        Objects.equals(this.includeLink, tapiPathComputationTopologyConstraint.includeLink) &&
        Objects.equals(this.preferredTransportLayer, tapiPathComputationTopologyConstraint.preferredTransportLayer) &&
        Objects.equals(this.excludeNode, tapiPathComputationTopologyConstraint.excludeNode) &&
        Objects.equals(this.includeTopology, tapiPathComputationTopologyConstraint.includeTopology) &&
        Objects.equals(this.includePath, tapiPathComputationTopologyConstraint.includePath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeNode, excludeLink, avoidTopology, excludePath, includeLink, preferredTransportLayer, excludeNode, includeTopology, includePath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiPathComputationTopologyConstraint {\n");
    
    sb.append("    includeNode: ").append(toIndentedString(includeNode)).append("\n");
    sb.append("    excludeLink: ").append(toIndentedString(excludeLink)).append("\n");
    sb.append("    avoidTopology: ").append(toIndentedString(avoidTopology)).append("\n");
    sb.append("    excludePath: ").append(toIndentedString(excludePath)).append("\n");
    sb.append("    includeLink: ").append(toIndentedString(includeLink)).append("\n");
    sb.append("    preferredTransportLayer: ").append(toIndentedString(preferredTransportLayer)).append("\n");
    sb.append("    excludeNode: ").append(toIndentedString(excludeNode)).append("\n");
    sb.append("    includeTopology: ").append(toIndentedString(includeTopology)).append("\n");
    sb.append("    includePath: ").append(toIndentedString(includePath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

