/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiCommonContextServiceInterfacePoint;
import io.swagger.model.TapiCommonGlobalClass;
import io.swagger.model.TapiCommonNameAndValue;
import io.swagger.model.TapiConnectivityConnectivityContext;
import io.swagger.model.TapiConnectivityContextAugmentation5;
import io.swagger.model.TapiNotificationContextAugmentation1;
import io.swagger.model.TapiNotificationNotificationContext;
import io.swagger.model.TapiOamContextAugmentation2;
import io.swagger.model.TapiOamContextOamContext;
import io.swagger.model.TapiPathComputationContextAugmentation4;
import io.swagger.model.TapiPathComputationPathComputationContext;
import io.swagger.model.TapiTopologyContextAugmentation6;
import io.swagger.model.TapiTopologyTopologyContext;
import io.swagger.model.TapiVirtualNetworkContextAugmentation3;
import io.swagger.model.TapiVirtualNetworkVirtualNetworkContext;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * TapiCommonContext
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiCommonContext   {
  @JsonProperty("name")
  private List<TapiCommonNameAndValue> name = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("connectivity-context")
  private TapiConnectivityConnectivityContext connectivityContext = null;

  @JsonProperty("notification-context")
  private TapiNotificationNotificationContext notificationContext = null;

  @JsonProperty("oam-context")
  private TapiOamContextOamContext oamContext = null;

  @JsonProperty("path-computation-context")
  private TapiPathComputationPathComputationContext pathComputationContext = null;

  @JsonProperty("topology-context")
  private TapiTopologyTopologyContext topologyContext = null;

  @JsonProperty("virtual-network-context")
  private TapiVirtualNetworkVirtualNetworkContext virtualNetworkContext = null;

  @JsonProperty("service-interface-point")
  private List<TapiCommonContextServiceInterfacePoint> serviceInterfacePoint = null;

  public TapiCommonContext name(List<TapiCommonNameAndValue> name) {
    this.name = name;
    return this;
  }

  public TapiCommonContext addNameItem(TapiCommonNameAndValue nameItem) {
    if (this.name == null) {
      this.name = new ArrayList<TapiCommonNameAndValue>();
    }
    this.name.add(nameItem);
    return this;
  }

  /**
   * List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(value = "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.")
  public List<TapiCommonNameAndValue> getName() {
    return name;
  }

  public void setName(List<TapiCommonNameAndValue> name) {
    this.name = name;
  }

  public TapiCommonContext uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

  /**
   * UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.                      UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.                      Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-&#39; + &#39;[0-9a-fA-F]{4}-[0-9a-fA-F]{12}                       Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
   * @return uuid
   **/
  @JsonProperty("uuid")
  @ApiModelProperty(value = "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.                      UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.                      Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12}                       Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public TapiCommonContext connectivityContext(TapiConnectivityConnectivityContext connectivityContext) {
    this.connectivityContext = connectivityContext;
    return this;
  }

  /**
   * Augments the base TAPI Context with ConnectivityService information
   * @return connectivityContext
   **/
  @JsonProperty("connectivity-context")
  @ApiModelProperty(value = "Augments the base TAPI Context with ConnectivityService information")
  public TapiConnectivityConnectivityContext getConnectivityContext() {
    return connectivityContext;
  }

  public void setConnectivityContext(TapiConnectivityConnectivityContext connectivityContext) {
    this.connectivityContext = connectivityContext;
  }

  public TapiCommonContext notificationContext(TapiNotificationNotificationContext notificationContext) {
    this.notificationContext = notificationContext;
    return this;
  }

  /**
   * Augments the base TAPI Context with NotificationService information
   * @return notificationContext
   **/
  @JsonProperty("notification-context")
  @ApiModelProperty(value = "Augments the base TAPI Context with NotificationService information")
  public TapiNotificationNotificationContext getNotificationContext() {
    return notificationContext;
  }

  public void setNotificationContext(TapiNotificationNotificationContext notificationContext) {
    this.notificationContext = notificationContext;
  }

  public TapiCommonContext oamContext(TapiOamContextOamContext oamContext) {
    this.oamContext = oamContext;
    return this;
  }

  /**
   * Augments the base TAPI Context with OamService information
   * @return oamContext
   **/
  @JsonProperty("oam-context")
  @ApiModelProperty(value = "Augments the base TAPI Context with OamService information")
  public TapiOamContextOamContext getOamContext() {
    return oamContext;
  }

  public void setOamContext(TapiOamContextOamContext oamContext) {
    this.oamContext = oamContext;
  }

  public TapiCommonContext pathComputationContext(TapiPathComputationPathComputationContext pathComputationContext) {
    this.pathComputationContext = pathComputationContext;
    return this;
  }

  /**
   * Augments the base TAPI Context with PathComputationService information
   * @return pathComputationContext
   **/
  @JsonProperty("path-computation-context")
  @ApiModelProperty(value = "Augments the base TAPI Context with PathComputationService information")
  public TapiPathComputationPathComputationContext getPathComputationContext() {
    return pathComputationContext;
  }

  public void setPathComputationContext(TapiPathComputationPathComputationContext pathComputationContext) {
    this.pathComputationContext = pathComputationContext;
  }

  public TapiCommonContext topologyContext(TapiTopologyTopologyContext topologyContext) {
    this.topologyContext = topologyContext;
    return this;
  }

  /**
   * Augments the base TAPI Context with TopologyService information
   * @return topologyContext
   **/
  @JsonProperty("topology-context")
  @ApiModelProperty(value = "Augments the base TAPI Context with TopologyService information")
  public TapiTopologyTopologyContext getTopologyContext() {
    return topologyContext;
  }

  public void setTopologyContext(TapiTopologyTopologyContext topologyContext) {
    this.topologyContext = topologyContext;
  }

  public TapiCommonContext virtualNetworkContext(TapiVirtualNetworkVirtualNetworkContext virtualNetworkContext) {
    this.virtualNetworkContext = virtualNetworkContext;
    return this;
  }

  /**
   * Augments the base TAPI Context with VirtualNetworkService information
   * @return virtualNetworkContext
   **/
  @JsonProperty("virtual-network-context")
  @ApiModelProperty(value = "Augments the base TAPI Context with VirtualNetworkService information")
  public TapiVirtualNetworkVirtualNetworkContext getVirtualNetworkContext() {
    return virtualNetworkContext;
  }

  public void setVirtualNetworkContext(TapiVirtualNetworkVirtualNetworkContext virtualNetworkContext) {
    this.virtualNetworkContext = virtualNetworkContext;
  }

  public TapiCommonContext serviceInterfacePoint(List<TapiCommonContextServiceInterfacePoint> serviceInterfacePoint) {
    this.serviceInterfacePoint = serviceInterfacePoint;
    return this;
  }

  public TapiCommonContext addServiceInterfacePointItem(TapiCommonContextServiceInterfacePoint serviceInterfacePointItem) {
    if (this.serviceInterfacePoint == null) {
      this.serviceInterfacePoint = new ArrayList<TapiCommonContextServiceInterfacePoint>();
    }
    this.serviceInterfacePoint.add(serviceInterfacePointItem);
    return this;
  }

  /**
   * none
   * @return serviceInterfacePoint
   **/
  @JsonProperty("service-interface-point")
  @ApiModelProperty(value = "none")
  public List<TapiCommonContextServiceInterfacePoint> getServiceInterfacePoint() {
    return serviceInterfacePoint;
  }

  public void setServiceInterfacePoint(List<TapiCommonContextServiceInterfacePoint> serviceInterfacePoint) {
    this.serviceInterfacePoint = serviceInterfacePoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiCommonContext tapiCommonContext = (TapiCommonContext) o;
    return Objects.equals(this.name, tapiCommonContext.name) &&
        Objects.equals(this.uuid, tapiCommonContext.uuid) &&
        Objects.equals(this.connectivityContext, tapiCommonContext.connectivityContext) &&
        Objects.equals(this.notificationContext, tapiCommonContext.notificationContext) &&
        Objects.equals(this.oamContext, tapiCommonContext.oamContext) &&
        Objects.equals(this.pathComputationContext, tapiCommonContext.pathComputationContext) &&
        Objects.equals(this.topologyContext, tapiCommonContext.topologyContext) &&
        Objects.equals(this.virtualNetworkContext, tapiCommonContext.virtualNetworkContext) &&
        Objects.equals(this.serviceInterfacePoint, tapiCommonContext.serviceInterfacePoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, uuid, connectivityContext, notificationContext, oamContext, pathComputationContext, topologyContext, virtualNetworkContext, serviceInterfacePoint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiCommonContext {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    connectivityContext: ").append(toIndentedString(connectivityContext)).append("\n");
    sb.append("    notificationContext: ").append(toIndentedString(notificationContext)).append("\n");
    sb.append("    oamContext: ").append(toIndentedString(oamContext)).append("\n");
    sb.append("    pathComputationContext: ").append(toIndentedString(pathComputationContext)).append("\n");
    sb.append("    topologyContext: ").append(toIndentedString(topologyContext)).append("\n");
    sb.append("    virtualNetworkContext: ").append(toIndentedString(virtualNetworkContext)).append("\n");
    sb.append("    serviceInterfacePoint: ").append(toIndentedString(serviceInterfacePoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

