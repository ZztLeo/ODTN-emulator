/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiEthStatisticalDmPerformanceParameters;
import javax.validation.constraints.*;

/**
 * TapiEthEthDmThresholdData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiEthEthDmThresholdData   {
  @JsonProperty("bi-dir-dm-clear-threshold")
  private TapiEthStatisticalDmPerformanceParameters biDirDmClearThreshold = null;

  @JsonProperty("near-end-dm-cross-threshold")
  private TapiEthStatisticalDmPerformanceParameters nearEndDmCrossThreshold = null;

  @JsonProperty("far-end-dm-clear-threshold")
  private TapiEthStatisticalDmPerformanceParameters farEndDmClearThreshold = null;

  @JsonProperty("far-end-dm-cross-threshold")
  private TapiEthStatisticalDmPerformanceParameters farEndDmCrossThreshold = null;

  @JsonProperty("bi-dir-dm-cross-threshold")
  private TapiEthStatisticalDmPerformanceParameters biDirDmCrossThreshold = null;

  @JsonProperty("near-end-dm-clear-threshold")
  private TapiEthStatisticalDmPerformanceParameters nearEndDmClearThreshold = null;

  public TapiEthEthDmThresholdData biDirDmClearThreshold(TapiEthStatisticalDmPerformanceParameters biDirDmClearThreshold) {
    this.biDirDmClearThreshold = biDirDmClearThreshold;
    return this;
  }

  /**
   * This attribute contains the bidirectional clear threshold values of the delay measurements.
   * @return biDirDmClearThreshold
   **/
  @JsonProperty("bi-dir-dm-clear-threshold")
  @ApiModelProperty(value = "This attribute contains the bidirectional clear threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getBiDirDmClearThreshold() {
    return biDirDmClearThreshold;
  }

  public void setBiDirDmClearThreshold(TapiEthStatisticalDmPerformanceParameters biDirDmClearThreshold) {
    this.biDirDmClearThreshold = biDirDmClearThreshold;
  }

  public TapiEthEthDmThresholdData nearEndDmCrossThreshold(TapiEthStatisticalDmPerformanceParameters nearEndDmCrossThreshold) {
    this.nearEndDmCrossThreshold = nearEndDmCrossThreshold;
    return this;
  }

  /**
   * This attribute contains the near end cross threshold values of the delay measurements.
   * @return nearEndDmCrossThreshold
   **/
  @JsonProperty("near-end-dm-cross-threshold")
  @ApiModelProperty(value = "This attribute contains the near end cross threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getNearEndDmCrossThreshold() {
    return nearEndDmCrossThreshold;
  }

  public void setNearEndDmCrossThreshold(TapiEthStatisticalDmPerformanceParameters nearEndDmCrossThreshold) {
    this.nearEndDmCrossThreshold = nearEndDmCrossThreshold;
  }

  public TapiEthEthDmThresholdData farEndDmClearThreshold(TapiEthStatisticalDmPerformanceParameters farEndDmClearThreshold) {
    this.farEndDmClearThreshold = farEndDmClearThreshold;
    return this;
  }

  /**
   * This attribute contains the far end clear threshold values of the delay measurements.
   * @return farEndDmClearThreshold
   **/
  @JsonProperty("far-end-dm-clear-threshold")
  @ApiModelProperty(value = "This attribute contains the far end clear threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getFarEndDmClearThreshold() {
    return farEndDmClearThreshold;
  }

  public void setFarEndDmClearThreshold(TapiEthStatisticalDmPerformanceParameters farEndDmClearThreshold) {
    this.farEndDmClearThreshold = farEndDmClearThreshold;
  }

  public TapiEthEthDmThresholdData farEndDmCrossThreshold(TapiEthStatisticalDmPerformanceParameters farEndDmCrossThreshold) {
    this.farEndDmCrossThreshold = farEndDmCrossThreshold;
    return this;
  }

  /**
   * This attribute contains the far end cross threshold values of the delay measurements.
   * @return farEndDmCrossThreshold
   **/
  @JsonProperty("far-end-dm-cross-threshold")
  @ApiModelProperty(value = "This attribute contains the far end cross threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getFarEndDmCrossThreshold() {
    return farEndDmCrossThreshold;
  }

  public void setFarEndDmCrossThreshold(TapiEthStatisticalDmPerformanceParameters farEndDmCrossThreshold) {
    this.farEndDmCrossThreshold = farEndDmCrossThreshold;
  }

  public TapiEthEthDmThresholdData biDirDmCrossThreshold(TapiEthStatisticalDmPerformanceParameters biDirDmCrossThreshold) {
    this.biDirDmCrossThreshold = biDirDmCrossThreshold;
    return this;
  }

  /**
   * This attribute contains the bidirectional cross threshold values of the delay measurements.
   * @return biDirDmCrossThreshold
   **/
  @JsonProperty("bi-dir-dm-cross-threshold")
  @ApiModelProperty(value = "This attribute contains the bidirectional cross threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getBiDirDmCrossThreshold() {
    return biDirDmCrossThreshold;
  }

  public void setBiDirDmCrossThreshold(TapiEthStatisticalDmPerformanceParameters biDirDmCrossThreshold) {
    this.biDirDmCrossThreshold = biDirDmCrossThreshold;
  }

  public TapiEthEthDmThresholdData nearEndDmClearThreshold(TapiEthStatisticalDmPerformanceParameters nearEndDmClearThreshold) {
    this.nearEndDmClearThreshold = nearEndDmClearThreshold;
    return this;
  }

  /**
   * This attribute contains the near end clear threshold values of the delay measurements.
   * @return nearEndDmClearThreshold
   **/
  @JsonProperty("near-end-dm-clear-threshold")
  @ApiModelProperty(value = "This attribute contains the near end clear threshold values of the delay measurements.")
  public TapiEthStatisticalDmPerformanceParameters getNearEndDmClearThreshold() {
    return nearEndDmClearThreshold;
  }

  public void setNearEndDmClearThreshold(TapiEthStatisticalDmPerformanceParameters nearEndDmClearThreshold) {
    this.nearEndDmClearThreshold = nearEndDmClearThreshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiEthEthDmThresholdData tapiEthEthDmThresholdData = (TapiEthEthDmThresholdData) o;
    return Objects.equals(this.biDirDmClearThreshold, tapiEthEthDmThresholdData.biDirDmClearThreshold) &&
        Objects.equals(this.nearEndDmCrossThreshold, tapiEthEthDmThresholdData.nearEndDmCrossThreshold) &&
        Objects.equals(this.farEndDmClearThreshold, tapiEthEthDmThresholdData.farEndDmClearThreshold) &&
        Objects.equals(this.farEndDmCrossThreshold, tapiEthEthDmThresholdData.farEndDmCrossThreshold) &&
        Objects.equals(this.biDirDmCrossThreshold, tapiEthEthDmThresholdData.biDirDmCrossThreshold) &&
        Objects.equals(this.nearEndDmClearThreshold, tapiEthEthDmThresholdData.nearEndDmClearThreshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(biDirDmClearThreshold, nearEndDmCrossThreshold, farEndDmClearThreshold, farEndDmCrossThreshold, biDirDmCrossThreshold, nearEndDmClearThreshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiEthEthDmThresholdData {\n");
    
    sb.append("    biDirDmClearThreshold: ").append(toIndentedString(biDirDmClearThreshold)).append("\n");
    sb.append("    nearEndDmCrossThreshold: ").append(toIndentedString(nearEndDmCrossThreshold)).append("\n");
    sb.append("    farEndDmClearThreshold: ").append(toIndentedString(farEndDmClearThreshold)).append("\n");
    sb.append("    farEndDmCrossThreshold: ").append(toIndentedString(farEndDmCrossThreshold)).append("\n");
    sb.append("    biDirDmCrossThreshold: ").append(toIndentedString(biDirDmCrossThreshold)).append("\n");
    sb.append("    nearEndDmClearThreshold: ").append(toIndentedString(nearEndDmClearThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

