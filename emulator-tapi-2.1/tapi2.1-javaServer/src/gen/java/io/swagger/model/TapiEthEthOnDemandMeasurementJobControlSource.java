/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiEthMessagePeriod;
import io.swagger.model.TapiEthOamPduGenerationType;
import io.swagger.model.TapiEthRepetitionPeriod;
import javax.validation.constraints.*;

/**
 * TapiEthEthOnDemandMeasurementJobControlSource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiEthEthOnDemandMeasurementJobControlSource   {
  @JsonProperty("data-tlv-length")
  private Integer dataTlvLength = null;

  @JsonProperty("test-identifier")
  private Integer testIdentifier = null;

  @JsonProperty("repetition-period")
  private TapiEthRepetitionPeriod repetitionPeriod = null;

  @JsonProperty("destination-address")
  private String destinationAddress = null;

  @JsonProperty("oam-pdu-generation-type")
  private TapiEthOamPduGenerationType oamPduGenerationType = null;

  @JsonProperty("priority")
  private Integer priority = 7;

  @JsonProperty("message-period")
  private TapiEthMessagePeriod messagePeriod = null;

  @JsonProperty("controller-mep-id")
  private String controllerMepId = null;

  @JsonProperty("measurement-interval")
  private Integer measurementInterval = null;

  public TapiEthEthOnDemandMeasurementJobControlSource dataTlvLength(Integer dataTlvLength) {
    this.dataTlvLength = dataTlvLength;
    return this;
  }

  /**
   * This parameter provides the size of the optional data TLV.                      Non-negative integer represents the number of bytes for the length of the padding TLV.                      Notes:                      When configuring this parameter one should be aware of the maximum allowed total frame size limitation.                      The attribute is not used in case of 2-way loss measurement.                      range of type : Depends on the allowed MTU size.
   * @return dataTlvLength
   **/
  @JsonProperty("data-tlv-length")
  @ApiModelProperty(value = "This parameter provides the size of the optional data TLV.                      Non-negative integer represents the number of bytes for the length of the padding TLV.                      Notes:                      When configuring this parameter one should be aware of the maximum allowed total frame size limitation.                      The attribute is not used in case of 2-way loss measurement.                      range of type : Depends on the allowed MTU size.")
  public Integer getDataTlvLength() {
    return dataTlvLength;
  }

  public void setDataTlvLength(Integer dataTlvLength) {
    this.dataTlvLength = dataTlvLength;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource testIdentifier(Integer testIdentifier) {
    this.testIdentifier = testIdentifier;
    return this;
  }

  /**
   * This attribute is used to distinguish each measurement session if multiple measurement sessions are simultaneously activated towards a peer MEP including concurrent on-demand and proactive tests. It must be unique at least within the context of any measurement type for the MEG and initiating MEP.                      Note: The attribute is not used in case of LMM/LMR measurement.                      range of type : 0..(2^32) - 1
   * @return testIdentifier
   **/
  @JsonProperty("test-identifier")
  @ApiModelProperty(value = "This attribute is used to distinguish each measurement session if multiple measurement sessions are simultaneously activated towards a peer MEP including concurrent on-demand and proactive tests. It must be unique at least within the context of any measurement type for the MEG and initiating MEP.                      Note: The attribute is not used in case of LMM/LMR measurement.                      range of type : 0..(2^32) - 1")
  public Integer getTestIdentifier() {
    return testIdentifier;
  }

  public void setTestIdentifier(Integer testIdentifier) {
    this.testIdentifier = testIdentifier;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource repetitionPeriod(TapiEthRepetitionPeriod repetitionPeriod) {
    this.repetitionPeriod = repetitionPeriod;
    return this;
  }

  /**
   * This attribute contains the time between the start of two measurement intervals. This IS applicable for the repetitive instance type and MAY be applicable for the repetitive series type.                       Note that a value of 0 means not applicable (NA), which is for the cases of single instance, single series, or repetitive series without extra gap in between the measurement intervals (i.e., also as known as continuous series).
   * @return repetitionPeriod
   **/
  @JsonProperty("repetition-period")
  @ApiModelProperty(value = "This attribute contains the time between the start of two measurement intervals. This IS applicable for the repetitive instance type and MAY be applicable for the repetitive series type.                       Note that a value of 0 means not applicable (NA), which is for the cases of single instance, single series, or repetitive series without extra gap in between the measurement intervals (i.e., also as known as continuous series).")
  public TapiEthRepetitionPeriod getRepetitionPeriod() {
    return repetitionPeriod;
  }

  public void setRepetitionPeriod(TapiEthRepetitionPeriod repetitionPeriod) {
    this.repetitionPeriod = repetitionPeriod;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource destinationAddress(String destinationAddress) {
    this.destinationAddress = destinationAddress;
    return this;
  }

  /**
   * This attribute contains the MAC address of the peer MEP. See G.8013 for details.
   * @return destinationAddress
   **/
  @JsonProperty("destination-address")
  @ApiModelProperty(value = "This attribute contains the MAC address of the peer MEP. See G.8013 for details.")
  public String getDestinationAddress() {
    return destinationAddress;
  }

  public void setDestinationAddress(String destinationAddress) {
    this.destinationAddress = destinationAddress;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource oamPduGenerationType(TapiEthOamPduGenerationType oamPduGenerationType) {
    this.oamPduGenerationType = oamPduGenerationType;
    return this;
  }

  /**
   * This attribute contains the pattern that is used for the generation of OAM PDUs.
   * @return oamPduGenerationType
   **/
  @JsonProperty("oam-pdu-generation-type")
  @ApiModelProperty(value = "This attribute contains the pattern that is used for the generation of OAM PDUs.")
  public TapiEthOamPduGenerationType getOamPduGenerationType() {
    return oamPduGenerationType;
  }

  public void setOamPduGenerationType(TapiEthOamPduGenerationType oamPduGenerationType) {
    this.oamPduGenerationType = oamPduGenerationType;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * This attribute contains the priority of the OAM PDU frames.                      range of type : 0, 1, 2, 3, 4, 5, 6, 7
   * @return priority
   **/
  @JsonProperty("priority")
  @ApiModelProperty(value = "This attribute contains the priority of the OAM PDU frames.                      range of type : 0, 1, 2, 3, 4, 5, 6, 7")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource messagePeriod(TapiEthMessagePeriod messagePeriod) {
    this.messagePeriod = messagePeriod;
    return this;
  }

  /**
   * This attribute contains the frequency of the OAM message (PDU) generation within a series.                       Note that the value 0 means that only one OAM message per measurement interval is generated.                      range of type : See corresponding Enum.
   * @return messagePeriod
   **/
  @JsonProperty("message-period")
  @ApiModelProperty(value = "This attribute contains the frequency of the OAM message (PDU) generation within a series.                       Note that the value 0 means that only one OAM message per measurement interval is generated.                      range of type : See corresponding Enum.")
  public TapiEthMessagePeriod getMessagePeriod() {
    return messagePeriod;
  }

  public void setMessagePeriod(TapiEthMessagePeriod messagePeriod) {
    this.messagePeriod = messagePeriod;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource controllerMepId(String controllerMepId) {
    this.controllerMepId = controllerMepId;
    return this;
  }

  /**
   * none
   * @return controllerMepId
   **/
  @JsonProperty("controller-mep-id")
  @ApiModelProperty(value = "none")
  public String getControllerMepId() {
    return controllerMepId;
  }

  public void setControllerMepId(String controllerMepId) {
    this.controllerMepId = controllerMepId;
  }

  public TapiEthEthOnDemandMeasurementJobControlSource measurementInterval(Integer measurementInterval) {
    this.measurementInterval = measurementInterval;
    return this;
  }

  /**
   * This attribute contains the discrete non overlapping periods of time (in seconds) during which measurements are performed (i.e., OAM messages are generated) and reports are gathered at the end of the measurement intervals. Note that the value 0 means a degenerated measurement interval with a single OAM message and the report is sent as immediately as possible.                      range of type : Non-negative
   * @return measurementInterval
   **/
  @JsonProperty("measurement-interval")
  @ApiModelProperty(value = "This attribute contains the discrete non overlapping periods of time (in seconds) during which measurements are performed (i.e., OAM messages are generated) and reports are gathered at the end of the measurement intervals. Note that the value 0 means a degenerated measurement interval with a single OAM message and the report is sent as immediately as possible.                      range of type : Non-negative")
  public Integer getMeasurementInterval() {
    return measurementInterval;
  }

  public void setMeasurementInterval(Integer measurementInterval) {
    this.measurementInterval = measurementInterval;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiEthEthOnDemandMeasurementJobControlSource tapiEthEthOnDemandMeasurementJobControlSource = (TapiEthEthOnDemandMeasurementJobControlSource) o;
    return Objects.equals(this.dataTlvLength, tapiEthEthOnDemandMeasurementJobControlSource.dataTlvLength) &&
        Objects.equals(this.testIdentifier, tapiEthEthOnDemandMeasurementJobControlSource.testIdentifier) &&
        Objects.equals(this.repetitionPeriod, tapiEthEthOnDemandMeasurementJobControlSource.repetitionPeriod) &&
        Objects.equals(this.destinationAddress, tapiEthEthOnDemandMeasurementJobControlSource.destinationAddress) &&
        Objects.equals(this.oamPduGenerationType, tapiEthEthOnDemandMeasurementJobControlSource.oamPduGenerationType) &&
        Objects.equals(this.priority, tapiEthEthOnDemandMeasurementJobControlSource.priority) &&
        Objects.equals(this.messagePeriod, tapiEthEthOnDemandMeasurementJobControlSource.messagePeriod) &&
        Objects.equals(this.controllerMepId, tapiEthEthOnDemandMeasurementJobControlSource.controllerMepId) &&
        Objects.equals(this.measurementInterval, tapiEthEthOnDemandMeasurementJobControlSource.measurementInterval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataTlvLength, testIdentifier, repetitionPeriod, destinationAddress, oamPduGenerationType, priority, messagePeriod, controllerMepId, measurementInterval);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiEthEthOnDemandMeasurementJobControlSource {\n");
    
    sb.append("    dataTlvLength: ").append(toIndentedString(dataTlvLength)).append("\n");
    sb.append("    testIdentifier: ").append(toIndentedString(testIdentifier)).append("\n");
    sb.append("    repetitionPeriod: ").append(toIndentedString(repetitionPeriod)).append("\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("    oamPduGenerationType: ").append(toIndentedString(oamPduGenerationType)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    messagePeriod: ").append(toIndentedString(messagePeriod)).append("\n");
    sb.append("    controllerMepId: ").append(toIndentedString(controllerMepId)).append("\n");
    sb.append("    measurementInterval: ").append(toIndentedString(measurementInterval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

