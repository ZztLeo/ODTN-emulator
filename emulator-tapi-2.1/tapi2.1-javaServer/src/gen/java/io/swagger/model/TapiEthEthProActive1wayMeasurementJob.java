/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiEthEthProActiveMeasurementJobControlSink;
import io.swagger.model.TapiEthEthProActiveMeasurementJobControlSource;
import javax.validation.constraints.*;

/**
 * TapiEthEthProActive1wayMeasurementJob
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiEthEthProActive1wayMeasurementJob   {
  @JsonProperty("pro-active-control-1way-source")
  private TapiEthEthProActiveMeasurementJobControlSource proActiveControl1waySource = null;

  @JsonProperty("pro-active-control-1way-sink")
  private TapiEthEthProActiveMeasurementJobControlSink proActiveControl1waySink = null;

  public TapiEthEthProActive1wayMeasurementJob proActiveControl1waySource(TapiEthEthProActiveMeasurementJobControlSource proActiveControl1waySource) {
    this.proActiveControl1waySource = proActiveControl1waySource;
    return this;
  }

  /**
   * none
   * @return proActiveControl1waySource
   **/
  @JsonProperty("pro-active-control-1way-source")
  @ApiModelProperty(value = "none")
  public TapiEthEthProActiveMeasurementJobControlSource getProActiveControl1waySource() {
    return proActiveControl1waySource;
  }

  public void setProActiveControl1waySource(TapiEthEthProActiveMeasurementJobControlSource proActiveControl1waySource) {
    this.proActiveControl1waySource = proActiveControl1waySource;
  }

  public TapiEthEthProActive1wayMeasurementJob proActiveControl1waySink(TapiEthEthProActiveMeasurementJobControlSink proActiveControl1waySink) {
    this.proActiveControl1waySink = proActiveControl1waySink;
    return this;
  }

  /**
   * none
   * @return proActiveControl1waySink
   **/
  @JsonProperty("pro-active-control-1way-sink")
  @ApiModelProperty(value = "none")
  public TapiEthEthProActiveMeasurementJobControlSink getProActiveControl1waySink() {
    return proActiveControl1waySink;
  }

  public void setProActiveControl1waySink(TapiEthEthProActiveMeasurementJobControlSink proActiveControl1waySink) {
    this.proActiveControl1waySink = proActiveControl1waySink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiEthEthProActive1wayMeasurementJob tapiEthEthProActive1wayMeasurementJob = (TapiEthEthProActive1wayMeasurementJob) o;
    return Objects.equals(this.proActiveControl1waySource, tapiEthEthProActive1wayMeasurementJob.proActiveControl1waySource) &&
        Objects.equals(this.proActiveControl1waySink, tapiEthEthProActive1wayMeasurementJob.proActiveControl1waySink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(proActiveControl1waySource, proActiveControl1waySink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiEthEthProActive1wayMeasurementJob {\n");
    
    sb.append("    proActiveControl1waySource: ").append(toIndentedString(proActiveControl1waySource)).append("\n");
    sb.append("    proActiveControl1waySink: ").append(toIndentedString(proActiveControl1waySink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

