/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * TapiEthEthProActiveMeasurementJobControlSink
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiEthEthProActiveMeasurementJobControlSink   {
  @JsonProperty("responder-mep-id")
  private String responderMepId = null;

  @JsonProperty("source-address")
  private String sourceAddress = null;

  @JsonProperty("test-identifier")
  private Integer testIdentifier = null;

  @JsonProperty("is-enabled")
  private Boolean isEnabled = true;

  public TapiEthEthProActiveMeasurementJobControlSink responderMepId(String responderMepId) {
    this.responderMepId = responderMepId;
    return this;
  }

  /**
   * none
   * @return responderMepId
   **/
  @JsonProperty("responder-mep-id")
  @ApiModelProperty(value = "none")
  public String getResponderMepId() {
    return responderMepId;
  }

  public void setResponderMepId(String responderMepId) {
    this.responderMepId = responderMepId;
  }

  public TapiEthEthProActiveMeasurementJobControlSink sourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
    return this;
  }

  /**
   * This attribute contains the MAC address of the peer MEP. See G.8013 for details.
   * @return sourceAddress
   **/
  @JsonProperty("source-address")
  @ApiModelProperty(value = "This attribute contains the MAC address of the peer MEP. See G.8013 for details.")
  public String getSourceAddress() {
    return sourceAddress;
  }

  public void setSourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
  }

  public TapiEthEthProActiveMeasurementJobControlSink testIdentifier(Integer testIdentifier) {
    this.testIdentifier = testIdentifier;
    return this;
  }

  /**
   * This attribute is used to distinguish each measurement session if multiple measurement sessions are simultaneously activated towards a peer MEP including concurrent on-demand and proactive tests. It must be unique at least within the context of any measurement type for the MEG and initiating MEP.                      range of type : 0..(2^32) - 1
   * @return testIdentifier
   **/
  @JsonProperty("test-identifier")
  @ApiModelProperty(value = "This attribute is used to distinguish each measurement session if multiple measurement sessions are simultaneously activated towards a peer MEP including concurrent on-demand and proactive tests. It must be unique at least within the context of any measurement type for the MEG and initiating MEP.                      range of type : 0..(2^32) - 1")
  public Integer getTestIdentifier() {
    return testIdentifier;
  }

  public void setTestIdentifier(Integer testIdentifier) {
    this.testIdentifier = testIdentifier;
  }

  public TapiEthEthProActiveMeasurementJobControlSink isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * This attribute identifies the state of the measurement job. If set to TRUE, the MEP performs proactive Performance Measurement.
   * @return isEnabled
   **/
  @JsonProperty("is-enabled")
  @ApiModelProperty(value = "This attribute identifies the state of the measurement job. If set to TRUE, the MEP performs proactive Performance Measurement.")
  public Boolean isIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiEthEthProActiveMeasurementJobControlSink tapiEthEthProActiveMeasurementJobControlSink = (TapiEthEthProActiveMeasurementJobControlSink) o;
    return Objects.equals(this.responderMepId, tapiEthEthProActiveMeasurementJobControlSink.responderMepId) &&
        Objects.equals(this.sourceAddress, tapiEthEthProActiveMeasurementJobControlSink.sourceAddress) &&
        Objects.equals(this.testIdentifier, tapiEthEthProActiveMeasurementJobControlSink.testIdentifier) &&
        Objects.equals(this.isEnabled, tapiEthEthProActiveMeasurementJobControlSink.isEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responderMepId, sourceAddress, testIdentifier, isEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiEthEthProActiveMeasurementJobControlSink {\n");
    
    sb.append("    responderMepId: ").append(toIndentedString(responderMepId)).append("\n");
    sb.append("    sourceAddress: ").append(toIndentedString(sourceAddress)).append("\n");
    sb.append("    testIdentifier: ").append(toIndentedString(testIdentifier)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

