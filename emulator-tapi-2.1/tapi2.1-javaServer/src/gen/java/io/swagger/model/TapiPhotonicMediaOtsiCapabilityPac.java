/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiPhotonicMediaApplicationIdentifier;
import io.swagger.model.TapiPhotonicMediaCentralFrequency;
import io.swagger.model.TapiPhotonicMediaModulationTechnique;
import io.swagger.model.TapiPhotonicMediaTotalPowerThresholdPac;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * TapiPhotonicMediaOtsiCapabilityPac
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiPhotonicMediaOtsiCapabilityPac   {
  @JsonProperty("supportable-lower-central-frequency")
  private List<TapiPhotonicMediaCentralFrequency> supportableLowerCentralFrequency = null;

  @JsonProperty("supportable-application-identifier")
  private List<TapiPhotonicMediaApplicationIdentifier> supportableApplicationIdentifier = null;

  @JsonProperty("supportable-modulation")
  private List<TapiPhotonicMediaModulationTechnique> supportableModulation = null;

  @JsonProperty("total-power-warn-threshold")
  private TapiPhotonicMediaTotalPowerThresholdPac totalPowerWarnThreshold = null;

  @JsonProperty("supportable-upper-central-frequency")
  private List<TapiPhotonicMediaCentralFrequency> supportableUpperCentralFrequency = null;

  public TapiPhotonicMediaOtsiCapabilityPac supportableLowerCentralFrequency(List<TapiPhotonicMediaCentralFrequency> supportableLowerCentralFrequency) {
    this.supportableLowerCentralFrequency = supportableLowerCentralFrequency;
    return this;
  }

  public TapiPhotonicMediaOtsiCapabilityPac addSupportableLowerCentralFrequencyItem(TapiPhotonicMediaCentralFrequency supportableLowerCentralFrequencyItem) {
    if (this.supportableLowerCentralFrequency == null) {
      this.supportableLowerCentralFrequency = new ArrayList<TapiPhotonicMediaCentralFrequency>();
    }
    this.supportableLowerCentralFrequency.add(supportableLowerCentralFrequencyItem);
    return this;
  }

  /**
   * The lower frequency of the channel spectrum
   * @return supportableLowerCentralFrequency
   **/
  @JsonProperty("supportable-lower-central-frequency")
  @ApiModelProperty(value = "The lower frequency of the channel spectrum")
  public List<TapiPhotonicMediaCentralFrequency> getSupportableLowerCentralFrequency() {
    return supportableLowerCentralFrequency;
  }

  public void setSupportableLowerCentralFrequency(List<TapiPhotonicMediaCentralFrequency> supportableLowerCentralFrequency) {
    this.supportableLowerCentralFrequency = supportableLowerCentralFrequency;
  }

  public TapiPhotonicMediaOtsiCapabilityPac supportableApplicationIdentifier(List<TapiPhotonicMediaApplicationIdentifier> supportableApplicationIdentifier) {
    this.supportableApplicationIdentifier = supportableApplicationIdentifier;
    return this;
  }

  public TapiPhotonicMediaOtsiCapabilityPac addSupportableApplicationIdentifierItem(TapiPhotonicMediaApplicationIdentifier supportableApplicationIdentifierItem) {
    if (this.supportableApplicationIdentifier == null) {
      this.supportableApplicationIdentifier = new ArrayList<TapiPhotonicMediaApplicationIdentifier>();
    }
    this.supportableApplicationIdentifier.add(supportableApplicationIdentifierItem);
    return this;
  }

  /**
   * The list of supportable ApplicationIdentifiers.
   * @return supportableApplicationIdentifier
   **/
  @JsonProperty("supportable-application-identifier")
  @ApiModelProperty(value = "The list of supportable ApplicationIdentifiers.")
  public List<TapiPhotonicMediaApplicationIdentifier> getSupportableApplicationIdentifier() {
    return supportableApplicationIdentifier;
  }

  public void setSupportableApplicationIdentifier(List<TapiPhotonicMediaApplicationIdentifier> supportableApplicationIdentifier) {
    this.supportableApplicationIdentifier = supportableApplicationIdentifier;
  }

  public TapiPhotonicMediaOtsiCapabilityPac supportableModulation(List<TapiPhotonicMediaModulationTechnique> supportableModulation) {
    this.supportableModulation = supportableModulation;
    return this;
  }

  public TapiPhotonicMediaOtsiCapabilityPac addSupportableModulationItem(TapiPhotonicMediaModulationTechnique supportableModulationItem) {
    if (this.supportableModulation == null) {
      this.supportableModulation = new ArrayList<TapiPhotonicMediaModulationTechnique>();
    }
    this.supportableModulation.add(supportableModulationItem);
    return this;
  }

  /**
   * This parameter defines the modulation used at the source
   * @return supportableModulation
   **/
  @JsonProperty("supportable-modulation")
  @ApiModelProperty(value = "This parameter defines the modulation used at the source")
  public List<TapiPhotonicMediaModulationTechnique> getSupportableModulation() {
    return supportableModulation;
  }

  public void setSupportableModulation(List<TapiPhotonicMediaModulationTechnique> supportableModulation) {
    this.supportableModulation = supportableModulation;
  }

  public TapiPhotonicMediaOtsiCapabilityPac totalPowerWarnThreshold(TapiPhotonicMediaTotalPowerThresholdPac totalPowerWarnThreshold) {
    this.totalPowerWarnThreshold = totalPowerWarnThreshold;
    return this;
  }

  /**
   * none
   * @return totalPowerWarnThreshold
   **/
  @JsonProperty("total-power-warn-threshold")
  @ApiModelProperty(value = "none")
  public TapiPhotonicMediaTotalPowerThresholdPac getTotalPowerWarnThreshold() {
    return totalPowerWarnThreshold;
  }

  public void setTotalPowerWarnThreshold(TapiPhotonicMediaTotalPowerThresholdPac totalPowerWarnThreshold) {
    this.totalPowerWarnThreshold = totalPowerWarnThreshold;
  }

  public TapiPhotonicMediaOtsiCapabilityPac supportableUpperCentralFrequency(List<TapiPhotonicMediaCentralFrequency> supportableUpperCentralFrequency) {
    this.supportableUpperCentralFrequency = supportableUpperCentralFrequency;
    return this;
  }

  public TapiPhotonicMediaOtsiCapabilityPac addSupportableUpperCentralFrequencyItem(TapiPhotonicMediaCentralFrequency supportableUpperCentralFrequencyItem) {
    if (this.supportableUpperCentralFrequency == null) {
      this.supportableUpperCentralFrequency = new ArrayList<TapiPhotonicMediaCentralFrequency>();
    }
    this.supportableUpperCentralFrequency.add(supportableUpperCentralFrequencyItem);
    return this;
  }

  /**
   * The Upper frequency of the channel spectrum
   * @return supportableUpperCentralFrequency
   **/
  @JsonProperty("supportable-upper-central-frequency")
  @ApiModelProperty(value = "The Upper frequency of the channel spectrum")
  public List<TapiPhotonicMediaCentralFrequency> getSupportableUpperCentralFrequency() {
    return supportableUpperCentralFrequency;
  }

  public void setSupportableUpperCentralFrequency(List<TapiPhotonicMediaCentralFrequency> supportableUpperCentralFrequency) {
    this.supportableUpperCentralFrequency = supportableUpperCentralFrequency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiPhotonicMediaOtsiCapabilityPac tapiPhotonicMediaOtsiCapabilityPac = (TapiPhotonicMediaOtsiCapabilityPac) o;
    return Objects.equals(this.supportableLowerCentralFrequency, tapiPhotonicMediaOtsiCapabilityPac.supportableLowerCentralFrequency) &&
        Objects.equals(this.supportableApplicationIdentifier, tapiPhotonicMediaOtsiCapabilityPac.supportableApplicationIdentifier) &&
        Objects.equals(this.supportableModulation, tapiPhotonicMediaOtsiCapabilityPac.supportableModulation) &&
        Objects.equals(this.totalPowerWarnThreshold, tapiPhotonicMediaOtsiCapabilityPac.totalPowerWarnThreshold) &&
        Objects.equals(this.supportableUpperCentralFrequency, tapiPhotonicMediaOtsiCapabilityPac.supportableUpperCentralFrequency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportableLowerCentralFrequency, supportableApplicationIdentifier, supportableModulation, totalPowerWarnThreshold, supportableUpperCentralFrequency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiPhotonicMediaOtsiCapabilityPac {\n");
    
    sb.append("    supportableLowerCentralFrequency: ").append(toIndentedString(supportableLowerCentralFrequency)).append("\n");
    sb.append("    supportableApplicationIdentifier: ").append(toIndentedString(supportableApplicationIdentifier)).append("\n");
    sb.append("    supportableModulation: ").append(toIndentedString(supportableModulation)).append("\n");
    sb.append("    totalPowerWarnThreshold: ").append(toIndentedString(totalPowerWarnThreshold)).append("\n");
    sb.append("    supportableUpperCentralFrequency: ").append(toIndentedString(supportableUpperCentralFrequency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

