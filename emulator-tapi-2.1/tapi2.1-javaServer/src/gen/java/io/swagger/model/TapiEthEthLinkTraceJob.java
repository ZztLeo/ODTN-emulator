/*
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API
 * tapi-common,tapi-dsr,tapi-path-computation,tapi-eth,tapi-virtual-network,tapi-topology,tapi-notification,tapi-oam,tapi-photonic-media,tapi-connectivity API generated from yang definitions
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.TapiEthEthOamOperationCommonPac;
import javax.validation.constraints.*;

/**
 * TapiEthEthLinkTraceJob
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-14T14:58:12.974+01:00")
public class TapiEthEthLinkTraceJob   {
  @JsonProperty("time-to-live")
  private Integer timeToLive = null;

  @JsonProperty("eth-lt-msg")
  private TapiEthEthOamOperationCommonPac ethLtMsg = null;

  public TapiEthEthLinkTraceJob timeToLive(Integer timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

  /**
   * G.8052: This parameter provides the Time To Live (TTL) parameter of the Link Track protocol.                      The TTL parameter allows the receiver (MIP or MEP) of the LTM frame to determine if the frame can be terminated. TTL is decremented every time the LTM frame is relayed. LTM frame with TTL&lt;&#x3D;1 is terminated and not relayed.
   * @return timeToLive
   **/
  @JsonProperty("time-to-live")
  @ApiModelProperty(value = "G.8052: This parameter provides the Time To Live (TTL) parameter of the Link Track protocol.                      The TTL parameter allows the receiver (MIP or MEP) of the LTM frame to determine if the frame can be terminated. TTL is decremented every time the LTM frame is relayed. LTM frame with TTL<=1 is terminated and not relayed.")
  public Integer getTimeToLive() {
    return timeToLive;
  }

  public void setTimeToLive(Integer timeToLive) {
    this.timeToLive = timeToLive;
  }

  public TapiEthEthLinkTraceJob ethLtMsg(TapiEthEthOamOperationCommonPac ethLtMsg) {
    this.ethLtMsg = ethLtMsg;
    return this;
  }

  /**
   * none
   * @return ethLtMsg
   **/
  @JsonProperty("eth-lt-msg")
  @ApiModelProperty(value = "none")
  public TapiEthEthOamOperationCommonPac getEthLtMsg() {
    return ethLtMsg;
  }

  public void setEthLtMsg(TapiEthEthOamOperationCommonPac ethLtMsg) {
    this.ethLtMsg = ethLtMsg;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapiEthEthLinkTraceJob tapiEthEthLinkTraceJob = (TapiEthEthLinkTraceJob) o;
    return Objects.equals(this.timeToLive, tapiEthEthLinkTraceJob.timeToLive) &&
        Objects.equals(this.ethLtMsg, tapiEthEthLinkTraceJob.ethLtMsg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeToLive, ethLtMsg);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapiEthEthLinkTraceJob {\n");
    
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    ethLtMsg: ").append(toIndentedString(ethLtMsg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

